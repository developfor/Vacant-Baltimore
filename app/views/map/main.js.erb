function initmap() {

    // set up the map
    var map = new L.Map('map',{zoomControl:false});
     new L.control.zoom({position: 'topright'}).addTo(map);
    // var markers = new L.MarkerClusterGroup({showCoverageOnHover: false,
    //     animateAddingMarkers:true});
    var markers = new L.MarkerClusterGroup({
        showCoverageOnHover: false,
        animateAddingMarkers:true,
        maxClusterRadius: 40,
        chunkedLoading: true
    });

    // create the tile layer with correct attribution
    var osmUrl = 'http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png';

    var osmAttrib = 'Tiles courtesy of <a href="http://hot.openstreetmap.org/">H.O.T.</a> | <a href="http://openstreetmap.org/">Â© OpenStreetMap</a>';
    var osm = new L.TileLayer(osmUrl, {
        minZoom: 10,
        maxZoom: 20,
        attribution: osmAttrib
        // position: 'topright'
    });
    map.setMaxBounds([[39.42452501272267, -76.3275146484375], [39.155622393423215, -76.89743041992188]]);


    // start the map in Baltimore
    map.addLayer(osm);
    map.addLayer(markers);
    map.setView(new L.LatLng(39.290385, -76.612189), 9);
    // map.addControl({position: 'topright'});
   geojsonFeature

   console.log(geojsonFeature)


    // For loop for Markers and PopUp Bubble
    for (i = 0; i < geojsonFeature.length; i++) {

         var id = geojsonFeature[i]._id.$oid
        // intersect = geojsonFeature[i].intersection
        // direct = geojsonFeature[i].direction;


        var longitude = geojsonFeature[i].coordinates[0],
        latitude = geojsonFeature[i].coordinates[1];


        // Icon for marker
        var myIcon = L.icon({
          iconSize: [25, 41],
          iconAnchor: [12, 41],
          iconUrl: 'images/marker-icon.png',
          className: "marker-" + id
        });

        
        // add markers to make and listen for click events
        // markers.addLayer(new L.marker([latitude, longitude], {icon: myIcon, title:intersect, id:id, direct:direct,latitude:latitude, longitude:longitude}).on('click', function(){
        markers.addLayer(new L.marker([latitude, longitude], {icon: myIcon, latitude:latitude, longitude:longitude}).on('click', function(){

         


           //  // heading bound conversion
           //  var bound = null;

           //  if (this.options.direct == "W/B"){
           //      var bound = "<div class='west-bound'><p>West Bound</p></div>";
           //  }
           //  if (this.options.direct == "S/B"){
           //      // var bound = "South Bound";
           //      var bound = "<div class='south-bound'><p>South Bound</p></div>";

           //  }
           //  if (this.options.direct == "N/B"){
           //      // var bound = "North Bound";
           //      var bound = "<div class='north-bound'><p>North Bound</p></div>";

           //  }
           //  if (this.options.direct == "E/B"){
           //      // var bound = "East Bound";
           //      var bound = "<div class='east-bound'><p>East Bound</p></div>";

           //  }


           //  // image for google location
           // var imgLocation = "<div class='location-pic'><img src='http://maps.googleapis.com/maps/api/streetview?size=250x120&location="+this.options.latitude+","+this.options.longitude+"&fov=90&heading=225&pitch=10&sensor=false'></div> ";

           // var title = "<div id='intersect-loc'><h1>Intersection:</h1></div><div class='title-address'><p>" + this.options.title + "</p></div>" ;

           //  $("#intro_text").html(imgLocation +title+ bound);





            // marker animation and switch
            //warning global variable 
            _$_saveId = this.options.id;
            //warning global variable 


            $(".leaflet-marker-icon").attr({
              src: "images/marker-icon.png",});

            markers.on('animationend', function (a) {
                // console.log(_$_saveId);
                $(".marker-"+ _$_saveId).attr({
                    src: "images/marker-icon-red.png",});
            });
            

            $(".marker-"+ this.options.id).attr({
              src: "images/marker-icon-red.png",});
        }));


    };
  

};

$("#submitter").on("click", function(){
  
  console.log("hello");
 
});


$("form").change(function() {
  console.log($(this).closest('form').serialize());
});


$("#submitter").click(function(){
  var formserial = "search.json?" + $('form').serialize();
  $.getJSON(formserial, function(result) {
    geojsonFeature = result;
  
});

  $.get(formserial ,function(data,status){
    console.log(data);
    $("closeby").text(JSON.stringify(data));
    $("countcloseby").text(data.length);
    var formserial = [];
  });
});

var geojsonFeature;

// $.getJSON('data/Baltimore_Fixed_Speed_Cameras.json', function(result) {
// $.getJSON('data/Baltimore_Fixed_Speed_Cameras.json', function(result) {
$.getJSON('http://localhost:3000/search.json?utf8=%E2%9C%93&vacant_building%5BfullAddress%5D=3810 CLAREMONT ST&commit=Find+Details', function(result) {
    geojsonFeature = result;
    initmap();
});